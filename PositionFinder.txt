package Assignment11;

public class PosistionFinder 
{
	 public static int[] searchRange(int[] nums, int target) 
	 {
	        int[] result = {-1, -1};
	        result[0] = findStartingPosition(nums, target);
	        if (result[0] == -1) 
	        {
	            return result;
	        }
	        result[1] = findEndingPosition(nums, target);
	        return result;
	    }
	    private static int findStartingPosition(int[] nums, int target) 
	    {
	        int left = 0;
	        int right = nums.length - 1;
	        int position = -1;
	        while (left <= right) 
	        {
	            int mid = left + (right - left) / 2;
	            if (nums[mid] >= target) 
	            {
	                right = mid - 1;
	                if (nums[mid] == target) 
	                {
	                    position = mid;
	                }
	            } 
	            else 
	            {
	                left = mid + 1;
	            }
	        }
	        return position;
	    }
	    private static int findEndingPosition(int[] nums, int target) 
	    {
	        int left = 0;
	        int right = nums.length - 1;
	        int position = -1;
	        while (left <= right) 
	        {
	            int mid = left + (right - left) / 2;
	            if (nums[mid] <= target)
	            {
	                left = mid + 1;
	                if (nums[mid] == target) 
	                {
	                    position = mid;
	                }
	            } 
	            else 
	            {
	                right = mid - 1;
	            }
	        }
	        return position;
	    }
	    public static void main(String[] args) 
	    {
	        int[] nums = {5, 7, 7, 8, 8, 10};
	        int target = 8;
	        int[] positions = searchRange(nums, target);
	        System.out.println(positions[0]);
	        System.out.println(positions[1]);
	    }
}
